Question 1: The application has a simple purpose and should therefore be complimented with a simple design. The application will have 3 main aspects:
    
User-related:
  a) Log-in page with register/sign-in functionality.
  b) Register page to create accounts with unique account checking.
  c) Profile page for users to enter/update their information.
  d) PostgreSQL databases to manage user’s username/passwords, profile information, and fuel-quote purchase history. 

Fuel quotes:
  a) Fuel quote page with a form to fill out with a pricing module.
  b) Feedback page to allow users to report issues.

Admin-related:
  a) Admin Log-in page for admins managing the service.
     - Allows Admins to view user’s account information.

Some of the application’s features will function based on conditions, while others will work based on user input and information stored in the database:

  a. Client location is a boolean variable, determining if location is in/out of state.
  b. Client history determines whether users are new or returning users.
  c. Gallons of fuel requested is an integer/floating-point value.
  d. Company profit margin is a constant (assuming it will not change) value that will help calculate fuel rates.
  e. Log-in feature verifies whether or not users exist, and prompt actions from the user based on existing user confirmation, 
     incorrect user information (like password), or non-existent user.
  f. Fuel quote form returns fuel rates as floats/doubles determined by user information. 
     Fuel quotes can be stored per each user to determine returning customers.


Question 2: For this application, our team member, Victor, suggested rapid application development (RAD) as the methodology for this service. 
The service is simple in nature and should not require a complex design. A RAD approach is ideal in this situation, as a simple design allows for 
faster prototyping and lower time spent and cost. A RAD approach will allow our team to focus less on planning and more on developing, 
iteratively testing features and weeding out any issues, as well as responding to any changes in customer requirements.
